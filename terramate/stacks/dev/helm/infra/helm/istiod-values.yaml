_internal_defaults_do_not_set:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: nodeType
                operator: In
                values:
                  - addon

pilot:
  autoscaleEnabled: true
  autoscaleMin: 1
  autoscaleMax: 5
  autoscaleBehavior: { }
  replicaCount: 1
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%

  hub: ""
  tag: ""
  variant: ""

  image: pilot
  traceSampling: 1.0

  resources:
    requests:
      cpu: 500m
      memory: 2048Mi

  seccompProfile: { }

  cni:
    enabled: false
    provider: default

  extraContainerArgs: [ ]

  env: { }

  taint:
    enabled: false
    namespace: ""

  affinity: {}

  tolerations: [ ]

  cpu:
    targetAverageUtilization: 80
  memory: { }

  volumeMounts: [ ]

  volumes: [ ]

  nodeSelector: { }
  podAnnotations: { }
  serviceAnnotations: { }
  serviceAccountAnnotations: { }

  topologySpreadConstraints: [ ]

  jwksResolverExtraRootCA: ""

  keepaliveMaxServerConnectionAge: 30m

  deploymentLabels: { }


  configMap: true

  podLabels: { }

  ipFamilyPolicy: ""
  ipFamilies: [ ]

  trustedZtunnelNamespace: ""

sidecarInjectorWebhook:
  neverInjectSelector: [ ]
  alwaysInjectSelector: [ ]
  injectedAnnotations: { }

  enableNamespacesByDefault: false

  reinvocationPolicy: Never

  rewriteAppHTTPProbe: true

  # templates:
  #   hello: |
  #     metadata:
  #       labels:
  #         hello: world
  templates: { }

  # For example:
  #
  # templates:
  #   hello: |
  #     metadata:
  #       labels:
  #         hello: world
  #
  # defaultTemplates: ["sidecar", "hello"]
  defaultTemplates: [ ]
istiodRemote:
  injectionURL: ""

  injectionPath: "/inject"

  injectionCABundle: ""
telemetry:
  enabled: true
  v2:
    enabled: true
    prometheus:
      enabled: true
    stackdriver:
      enabled: false
revision: ""

revisionTags: [ ]

ownerName: ""

meshConfig:
  enablePrometheusMerge: true

experimental:
  stableValidationPolicy: false

global:
  istioNamespace: istio-system
  certSigners: [ ]
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
    #   memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi

  hub: docker.io/istio
  tag: 1.23.2
  variant: ""
  imagePullPolicy: ""
  imagePullSecrets: [ ]
  istiod:
    enableAnalysis: false

  logAsJson: false

  logging:
    level: "default:info"

  omitSidecarInjectorConfigMap: false

  operatorManageWebhooks: false
  priorityClassName: ""

  proxy:
    image: proxyv2

    autoInject: enabled

    clusterDomain: "cluster.local"

    componentLogLevel: "misc:error"

    enableCoreDump: false

    excludeInboundPorts: ""
    includeInboundPorts: "*"

    includeIPRanges: "*"
    excludeIPRanges: ""
    includeOutboundPorts: ""
    excludeOutboundPorts: ""

    logLevel: warning

    outlierLogPath: ""

    privileged: false

    readinessFailureThreshold: 4

    readinessInitialDelaySeconds: 0

    readinessPeriodSeconds: 15
    startupProbe:
      enabled: true
      failureThreshold: 600 # 10 minutes

    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 2000m
        memory: 1024Mi

    statusPort: 15020

    tracer: "none"

  proxy_init:
    image: proxyv2

  remotePilotAddress: ""
  caAddress: ""

  externalIstiod: false

  configCluster: false

  configValidation: true
  meshID: ""
  # meshNetworks:
  #   network1:
  #     endpoints:
  #     - fromCidr: "192.168.0.1/24"
  #     gateways:
  #     - address: 1.1.1.1
  #       port: 80
  #   network2:
  #     endpoints:
  #     - fromRegistry: reg1
  #     gateways:
  #     - registryServiceName: istio-gateway-ingressgateway.istio-gateway-system.svc.cluster.local
  #       port: 443
  #
  meshNetworks: { }

  mountMtlsCerts: false

  multiCluster:
    enabled: false
    clusterName: ""

  network: ""

  pilotCertProvider: istiod
  sds:
    token:
      aud: istio-ca
  sts:
    servicePort: 0
  caName: ""
  autoscalingv2API: true

base:
  enableIstioConfigCRDs: true

istio_cni:
  chained: false
  provider: default

gateways:
  securityContext: { }
  seccompProfile: { }
