gateway:
  defaults:
    affinity: { }
    annotations: { }
    autoscaling:
      autoscaleBehavior: { }
      enabled: true
      maxReplicas: 5
      minReplicas: 1
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: { }
    containerSecurityContext: { }
    env: { }
    imagePullPolicy: ""
    imagePullSecrets: [ ]
    kind: Deployment
    labels: { }
    name: ""
    networkGateway: ""
    nodeSelector: { }
    podAnnotations:
      inject.istio.io/templates: gateway
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      sidecar.istio.io/inject: "true"
    podDisruptionBudget: { }
    priorityClassName: ""
    rbac:
      enabled: true
    replicaCount: null
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    revision: ""
    securityContext: { }
    service:
      annotations: { }
      externalIPs: [ ]
      externalTrafficPolicy: ""
      ipFamilies: [ ]
      ipFamilyPolicy: ""
      loadBalancerIP: ""
      loadBalancerSourceRanges: [ ]
      ports:
        - name: status-port
          port: 15021
          protocol: TCP
          targetPort: 15021
        - name: http2
          port: 80
          protocol: TCP
          targetPort: 80
        - name: https
          port: 443
          protocol: TCP
          targetPort: 443
      type: ClusterIP
    serviceAccount:
      annotations: { }
      create: true
      name: ""
    terminationGracePeriodSeconds: 30
    tolerations: [ ]
    topologySpreadConstraints: [ ]
    volumeMounts: [ ]
    volumes: [ ]
