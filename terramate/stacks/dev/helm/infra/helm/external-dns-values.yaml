external-dns:
  image:
    # -- Image repository for the `external-dns` container.
    repository: registry.k8s.io/external-dns/external-dns
    # -- (string) Image tag for the `external-dns` container, this will default to `.Chart.AppVersion` if not set.
    tag:
    # -- Image pull policy for the `external-dns` container.
    pullPolicy: IfNotPresent

  # -- (string) Override the name of the chart.
  nameOverride: external-dns

  # -- (string) Override the full name of the chart.
  fullnameOverride: external-dns

  # -- Labels to add to all chart resources.
  commonLabels: { }

  serviceAccount:
    # -- If `true`, create a new `ServiceAccount`.
    create: true
    # -- Labels to add to the service account.
    labels: { }
    # -- Annotations to add to the service account.
    annotations: { }
    # -- (string) If this is set and `serviceAccount.create` is `true` this will be used for the created `ServiceAccount` name, if set and `serviceAccount.create` is `false` then this will define an existing `ServiceAccount` to use.
    name:
    # -- Set this to `false` to [opt out of API credential automounting](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#opt-out-of-api-credential-automounting) for the `ServiceAccount`.
    automountServiceAccountToken:

  service:
    # -- Service annotations.
    annotations: { }
    # -- Service HTTP port.
    port: 7979
    # -- Service IP families.
    ipFamilies: [ ]
    # -- (string) Service IP family policy.
    ipFamilyPolicy:

  rbac:
    # -- If `true`, create a `ClusterRole` & `ClusterRoleBinding` with access to the Kubernetes API.
    create: true
    # -- Additional rules to add to the `ClusterRole`.
    additionalPermissions: [ ]

  # -- Annotations to add to the `Deployment`.
  deploymentAnnotations: { }

  # -- (int) Specify the number of old `ReplicaSets` to retain to allow rollback of the `Deployment``.
  revisionHistoryLimit: 5

  # -- Labels to add to the `Pod`.
  podLabels: { }

  # -- Annotations to add to the `Pod`.
  podAnnotations: { }

  # -- [Pod security context](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#podsecuritycontext-v1-core), this supports full customisation.
  # @default -- See _values.yaml_
  podSecurityContext:
    runAsNonRoot: true
    fsGroup: 65534
    seccompProfile:
      type: RuntimeDefault

  # -- (string) Priority class name for the `Pod`.
  priorityClassName:

  # -- (int) Termination grace period for the `Pod` in seconds.
  terminationGracePeriodSeconds:

  # -- (string) [DNS policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) for the pod, if not set the default will be used.
  dnsPolicy:

  # -- (object) [DNS config](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config) for the pod, if not set the default will be used.
  dnsConfig:

  # -- [Init containers](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/) to add to the `Pod` definition.
  initContainers: [ ]

  # -- [Security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) for the `external-dns` container.
  # @default -- See _values.yaml_
  securityContext:
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 65534
    runAsGroup: 65534
    capabilities:
      drop: [ "ALL" ]

  # -- [Environment variables](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/) for the `external-dns` container.
  env:
    - name: AWS_DEFAULT_REGION
      value: ap-northeast-2

  # -- [Liveness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `external-dns` container.
  # @default -- See _values.yaml_
  livenessProbe: {}
#    httpGet:
#      path: /healthz
#      port: http
#    initialDelaySeconds: 10
#    periodSeconds: 10
#    timeoutSeconds: 5
#    failureThreshold: 2
#    successThreshold: 1

  # -- [Readiness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `external-dns` container.
  # @default -- See _values.yaml_
  readinessProbe: {}
#    httpGet:
#      path: /healthz
#      port: http
#    initialDelaySeconds: 5
#    periodSeconds: 10
#    timeoutSeconds: 5
#    failureThreshold: 6
#    successThreshold: 1

  # -- Extra [volumes](https://kubernetes.io/docs/concepts/storage/volumes/) for the `Pod`.
  extraVolumes: [ ]

  # -- Extra [volume mounts](https://kubernetes.io/docs/concepts/storage/volumes/) for the `external-dns` container.
  extraVolumeMounts: [ ]

  # -- [Resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for the `external-dns` container.
  resources: { }

  # -- Log level.
  logLevel: info

  # -- Log format.
  logFormat: text

  # -- Interval for DNS updates.
  interval: 1m

  # -- If `true`, triggers run loop on create/update/delete events in addition of regular interval.
  triggerLoopOnEvent: false

  # -- if `true`, _ExternalDNS_ will run in a namespaced scope (`Role`` and `Rolebinding`` will be namespaced too).
  namespaced: false

  # -- _Kubernetes_ resources to monitor for DNS entries.
  sources:
    - service
    - ingress

  # -- How DNS records are synchronized between sources and providers; available values are `sync` & `upsert-only`.
  policy: upsert-only

  # -- Specify the registry for storing ownership and labels.
  # Valid values are `txt`, `aws-sd`, `dynamodb` & `noop`.
  registry: txt
  # -- (string) Specify an identifier for this instance of _ExternalDNS_ wWhen using a registry other than `noop`.
  txtOwnerId: $TXT_OWNER_ID
  # -- (string) Specify a prefix for the domain names of TXT records created for the `txt` registry.
  # Mutually exclusive with `txtSuffix`.
  txtPrefix:
  # -- (string) Specify a suffix for the domain names of TXT records created for the `txt` registry.
  # Mutually exclusive with `txtPrefix`.
  txtSuffix:

  ## - Limit possible target zones by domain suffixes.
  domainFilters:
    - $DOMAIN_NAME

  ## -- Intentionally exclude domains from being managed.
  excludeDomains: [ ]

  extraArgs:
    - --aws-zone-type=public

  provider:
    # -- _ExternalDNS_ provider name; for the available providers and how to configure them see [README](https://github.com/kubernetes-sigs/external-dns/blob/master/charts/external-dns/README.md#providers).
    name: aws
    webhook:
      image:
        # -- (string) Image repository for the `webhook` container.
        repository:
        # -- (string) Image tag for the `webhook` container.
        tag:
        # -- Image pull policy for the `webhook` container.
        pullPolicy: IfNotPresent
      # -- [Environment variables](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/) for the `webhook` container.
      env: [ ]
      # -- Extra arguments to provide for the `webhook` container.
      args: [ ]
      # -- Extra [volume mounts](https://kubernetes.io/docs/concepts/storage/volumes/) for the `webhook` container.
      extraVolumeMounts: [ ]
      # -- [Resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for the `webhook` container.
      resources: { }
      # -- [Pod security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) for the `webhook` container.
      # @default -- See _values.yaml_
      securityContext: { }
      # -- [Liveness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `external-dns` container.
      # @default -- See _values.yaml_
      livenessProbe:
        httpGet:
          path: /healthz
          port: http-webhook
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 2
        successThreshold: 1
      # -- [Readiness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `webhook` container.
      # @default -- See _values.yaml_
      readinessProbe: {}
#        httpGet:
#          path: /healthz
#          port: http-webhook
#        initialDelaySeconds: 5
#        periodSeconds: 10
#        timeoutSeconds: 5
#        failureThreshold: 6
#        successThreshold: 1
      service:
        # -- Webhook exposed HTTP port for the service.
        port: 8080