apiVersion: v1
data:
  service.slack: |
    token: SAMPLE
  template.app-deployed: |
    email:
      subject: New version of an application {{.app.metadata.name}} is up and running.
    message: |
      {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.
    slack:
      attachments: |
        [{
          "title": "{{ .app.metadata.name}}",
          "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
          "color": "#18be52",
          "fields": [
          {
            "title": "Sync Status",
            "value": "{{.app.status.sync.status}}",
            "short": true
          },
          {
            "title": "Repository",
            "value": "{{.app.spec.source.repoURL}}",
            "short": true
          },
          {
            "title": "Revision",
            "value": "{{.app.status.sync.revision}}",
            "short": true
          }
          {{range $index, $c := .app.status.conditions}}
          {{if not $index}},{{end}}
          {{if $index}},{{end}}
          {
            "title": "{{$c.type}}",
            "value": "{{$c.message}}",
            "short": true
          }
          {{end}}
          ]
        }]
  template.app-sync-failed: |
    email:
      subject: Failed to sync application {{.app.metadata.name}}.
    message: |
      {{if eq .serviceType "slack"}}:exclamation:{{end}} {{.app.metadata.name}} 배포가 실패했습니다.
      에러 내용 : {{.app.status.operationState.message}}
      배포 파이프라인 확인: https://test-dev.service.co.kr/argo/applications/{{.app.metadata.name}}?operation=true
    slack:
      attachments: |-
        [{
          "title": "{{ .app.metadata.name}}",
          "title_link":"https://test-dev.service.co.kr/argo/applications/{{.app.metadata.name}}",
          "color": "#E96D76",
          "fields": [
          {
            "title": "서비스 업데이트 상태",
            "value": "시스템 배포 실패",
            "short": true
          },
          {
            "title": "배포환경",
            "value": "Dev",
            "short": true
          },
          {
            "title": "업데이트 내용",
            "value": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}",
            "short": true
          }
          ]
        }]
  template.app-sync-running: |
    email:
      subject: Start syncing application {{.app.metadata.name}}.
    message: |
      {{if eq .serviceType "slack"}}:runner:{{end}} ArgoCD에서 *`{{.app.metadata.name}}`* 서비스에 대한 업데이트가 진행중 입니다.
      - 업데이트 대상 : *`{{ (index .app.status.operationState.syncResult.resources 0).name }}`*
      - 배포 파이프라인 확인 : https://test-dev.service.co.kr/argo/applications/{{.app.metadata.name}}
    slack:
      attachments: |-
        [{
          "title": "{{ .app.metadata.name}}",
          "title_link":"https://test-dev.service.co.kr/applications/{{.app.metadata.name}}",
          "color": "#0DADEA",
          "fields": [
          {
            "title": "서비스 업데이트 상태",
            "value": "시스템 배포 중",
            "short": true
          },
          {
            "title": "배포환경",
            "value": "Dev",
            "short": true
          },
          {
            "title": "업데이트 내용",
            "value": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}",
            "short": true
          }
          ]
        }]
  template.app-sync-succeeded: |
    email:
      subject: Application {{.app.metadata.name}} has been successfully synced.
    message: |
      {{if eq .serviceType "slack"}}:white_check_mark:{{end}} ArgoCD에서 *`{{.app.metadata.name}}`* 서비스에 대한 업데이트가 완료되었습니다.
      - 업데이트 대상 : *`{{ (index .app.status.operationState.syncResult.resources 0).name }}`*
      - 배포 파이프라인 확인 : https://test-dev.service.co.kr/argo/applications/{{.app.metadata.name}}
    slack:
      attachments: |
        [{
          "title": "{{ .app.metadata.name}}",
          "title_link":"https://test-dev.service.co.kr/argo/applications/{{.app.metadata.name}}",
          "color": "#18be52",
          "fields": [
          {
            "title": "서비스 업데이트 상태",
            "value": "시스템 배포 완료",
            "short": true
          },
          {
            "title": "배포환경",
            "value": "Dev",
            "short": true
          },
          {
            "title": "업데이트 내용",
            "value": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}",
            "short": true
          }
          ]
        }]
      deliveryPolicy: Post
      groupingKey: ""
      notifyBroadcast: false
    teams:
      facts: |
        [{
          "name": "Sync Status",
          "value": "{{.app.status.sync.status}}"
        },
        {
          "name": "Synced at",
          "value": "{{.app.status.operationState.finishedAt}}"
        },
        {
          "name": "Repository",
          "value": "{{.app.spec.source.repoURL}}"
        }
        {{range $index, $c := .app.status.conditions}}
          {{if not $index}},{{end}}
          {{if $index}},{{end}}
          {
            "name": "{{$c.type}}",
            "value": "{{$c.message}}"
          }
        {{end}}
        ]
      potentialAction: |-
        [{
          "@type":"OpenUri",
          "name":"Operation Details",
          "targets":[{
            "os":"default",
            "uri":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
          }]
        },
        {
          "@type":"OpenUri",
          "name":"Open Repository",
          "targets":[{
            "os":"default",
            "uri":"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}"
          }]
        }]
      themeColor: '#000080'
      title: Application {{.app.metadata.name}} has been successfully synced
  trigger.on-deployed: |
    - description: Application is synced and healthy. Triggered once per commit.
      oncePer: app.status.sync.revision
      send:
      - app-deployed
      when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
  trigger.on-health-degraded: |
    - description: Application has degraded
      send:
      - app-health-degraded
      when: app.status.health.status == 'Degraded'
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      send:
      - app-sync-failed
      when: app.status.operationState.phase in ['Error', 'Failed']
  trigger.on-sync-running: |
    - description: Application is being synced
      send:
      - app-sync-running
      when: app.status.operationState.phase in ['Running']
  trigger.on-sync-status-unknown: |
    - description: Application status is 'Unknown'
      send:
      - app-sync-status-unknown
      when: app.status.sync.status == 'Unknown'
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      send:
      - app-sync-succeeded
      when: app.status.operationState.phase in ['Succeeded']
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: argocd-notifications-cm
  namespace: argocd